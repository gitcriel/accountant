{"version":3,"sources":["config.js","account/AccountActionTypes.js","account/AccountReducer.js","reducers.js","store.js","root/RootRedirect.js","common/util/ServiceUtil.js","account/AccountService.js","common/util/ErrorUtil.js","account/AccountActions.js","root/HeaderNav.js","root/ComingSoonPage.js","common/components/MessageBox.js","common/components/Message.js","common/components/FieldMessage.js","common/components/Field.js","common/components/Spinner.js","common/components/CenteredContainer.js","common/components/SubmitButton.js","account/ChangePassword.js","root/Main.js","account/LoginPage.js","account/RegisterPage.js","index.js","root/App.js"],"names":["config","SESSION_STORAGE_SESSION_TOKEN","SESSION_STORAGE_USERNAME","SERVICE_URL","BASE_NAME","URI","SESSION","ACCOUNT","CHANGE_PASSWORD","AccountActionTypes","CLEAR_ERRORS","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","initialState","sessionStorage","getItem","isLoggedIn","history","AccountReducer","state","arguments","length","undefined","action","type","actionTypes","Object","objectSpread","error","username","isSessionExpired","fetching","message","loggedIn","sessionExpired","saving","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","store","createStore","connectRouter","combineReducers","router","accountReducer","RootRedirect","react_default","a","createElement","Redirect","to","process","ServiceUtil","postNoAuth","post","get","save","erase","_callee","body","request","response","regenerator_default","wrap","_context","prev","next","method","headers","Content-Type","JSON","stringify","fetch","sent","handleResponse","abrupt","stop","_callee2","_context2","getAuth","_callee3","id","uri","_context3","_callee4","_context4","_callee5","_context5","Authorization","text","then","data","parse","ok","statusText","Promise","reject","AccountService","service","password","SHA1","Hashes","passwordHash","hex","confirmPasswordHash","confirmPassword","oldPasswordHash","oldPassword","newPasswordHash","newPassword","failure","actionType","errorUtil","handleErrors","dispatch","description","Error","accountActions","logout","Message","clearErrors","login","accountService","responseData","token","sessionToken","storeSessionData","success","clear","register","changePassword","setItem","HeaderNav","className","Link","data-toggle","data-target","href","aria-haspopup","aria-expanded","aria-labelledby","onClick","this","props","handleLogout","Component","ComingSoonPage","MessageBox","_this$props","showWhen","style","paddingRight","warning","info","components_MessageBox","FieldMessage","fieldError","properties","i","replace","_this","errorKey","fields","map","key","getErrorDescription","Field","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showPassword","toggleShowPassword","bind","assertThisInitialized","setState","name","label","autoFocus","disabled","onChange","onBlur","value","placeholder","passwordVisibilityToggle","htmlFor","hasErrors","components_FieldMessage","aria-describedby","aria-hidden","Spinner","CenteredContainer","getClasses","classes","left","right","middle","getSize","container","children","SubmitButton","submit","e","preventDefault","ChangePassword","handleChange","_e$target","target","defineProperty","handleChangePassword","_this$state","actions","clearPassword","_this$state2","components_CenteredContainer","common_components_Spinner","components_Message","components_Field","components_SubmitButton","connect","_state$accountReducer","Main","document","location","pathname","endsWith","match","src_root_HeaderNav","isOnRootPath","Route","path","component","ComingSoon","Login","handleLogin","_this$props2","RegisterPage","handleCreateAccount","readyForSubmit","querySelector","render","es","esm","basename","exact","Register"],"mappings":"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","file":"static/js/main.8fee824c.chunk.js","sourcesContent":["export default {\r\n  SESSION_STORAGE_SESSION_TOKEN: 'SessionToken',\r\n  SESSION_STORAGE_USERNAME: 'username',\r\n\r\n  SERVICE_URL: '',\r\n  \r\n  BASE_NAME: '/',\r\n\r\n  URI: {\r\n    SESSION: '/api/v1/session',\r\n    ACCOUNT: '/api/v1/account',\r\n    CHANGE_PASSWORD: '/api/v1/account/changepassword'\r\n  }\r\n}\r\n","export default {\r\n  CLEAR_ERRORS: 'CLEAR_ERRORS',\r\n  \r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  \r\n  LOGOUT: 'LOGOUT',\r\n\r\n  REGISTER_REQUEST: 'REGISTER_REQUEST',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n\r\n  CHANGE_PASSWORD_REQUEST: 'CHANGE_PASSWORD_REQUEST',\r\n  CHANGE_PASSWORD_SUCCESS: 'CHANGE_PASSWORD_SUCCESS',\r\n  CHANGE_PASSWORD_FAILURE: 'CHANGE_PASSWORD_FAILURE'\r\n}","import config from '../config'\r\nimport actionTypes from './AccountActionTypes'\r\n\r\nlet initialState = {}\r\nlet sessionToken = sessionStorage.getItem(config.SESSION_STORAGE_SESSION_TOKEN)\r\nif (sessionToken)\r\n  initialState = { isLoggedIn: true }\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      }\r\n    case actionTypes.REGISTER_REQUEST:\r\n    case actionTypes.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        isSessionExpired: false,\r\n        fetching: true,\r\n        error: null,\r\n        message: null\r\n      }\r\n    case actionTypes.REGISTER_SUCCESS:\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        loggedIn: true\r\n      }\r\n    case actionTypes.REGISTER_FAILURE:\r\n    case actionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        error: action.error\r\n      }\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        sessionExpired: action.sessionExpired,\r\n        saving: false,\r\n        loggedIn: false,\r\n        message: action.message\r\n      }    \r\n    case actionTypes.CHANGE_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        saving: true,\r\n        error: null\r\n      }\r\n    case actionTypes.CHANGE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        saving: false,\r\n        error: null\r\n      }\r\n    case actionTypes.CHANGE_PASSWORD_FAILURE:\r\n      return {\r\n        ...state,\r\n        saving: false,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport accountReducer from './account/AccountReducer'\r\n\r\nexport default (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  accountReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport rootReducer from './reducers'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [\r\n  thunk,\r\n  routerMiddleware(history)\r\n]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension())\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nconst store = createStore(\r\n  connectRouter(history)(rootReducer(history)),\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default () => (\r\n  <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n)","import config from '../../config'\r\n\r\nexport default {\r\n  postNoAuth,\r\n  post,\r\n  get,\r\n  save,\r\n  erase\r\n}\r\n\r\nasync function postNoAuth(URI, body) {\r\n  const request = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(body)\r\n  }\r\n  const response = await fetch(config.SERVICE_URL + URI, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function post(URI, body) {\r\n  const request = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() },\r\n    body: JSON.stringify(body)\r\n  }\r\n  const response = await fetch(config.SERVICE_URL + URI, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function save(URI, id, body) {\r\n  let uri = config.SERVICE_URL + URI\r\n  let method = 'POST'\r\n  if(id !== undefined) {\r\n    method = 'PUT'\r\n    uri += \"/\" + id\r\n  }\r\n\r\n  const request = {\r\n    method: method,\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() },\r\n    body: JSON.stringify(body)\r\n  }\r\n  const response = await fetch(uri, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function get(URI, id) {\r\n  const request = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() }\r\n  }\r\n  let uri = config.SERVICE_URL + URI\r\n  if(id !== undefined)\r\n    uri += \"/\" + id\r\n\r\n  const response = await fetch(uri, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function erase(URI, id) {\r\n  const request = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() }\r\n  }\r\n  let uri = config.SERVICE_URL + URI\r\n  if(id !== undefined)\r\n    uri += \"/\" + id\r\n\r\n  const response = await fetch(uri, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nfunction getAuth() {\r\n  return { 'Authorization': 'Custom ' + sessionStorage.getItem(config.SESSION_STORAGE_SESSION_TOKEN) }\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text)\r\n    if(response.ok) \r\n      return data\r\n\r\n      const error = data || response.statusText\r\n      return Promise.reject(error)\r\n  })\r\n}","import service from '../common/util/ServiceUtil'\r\nimport config from '../config'\r\nimport Hashes from 'jshashes'\r\n\r\nexport default {\r\n  login: data => service.postNoAuth(config.URI.SESSION, { username: data.username, password: data.password }),\r\n\r\n  register: data => {\r\n    let SHA1 = new Hashes.SHA1()\r\n    let passwordHash = data.password === '' ? '' : SHA1.hex(data.password)\r\n    let confirmPasswordHash = data.confirmPassword === '' ? '' : SHA1.hex(data.confirmPassword)\r\n\r\n    service.post(config.URI.ACCOUNT, { username: data.username, password: passwordHash, confirmPassword: confirmPasswordHash })\r\n  },\r\n\r\n  logout: () => service.erase(config.URI.SESSION),\r\n  \r\n  changePassword: data => {\r\n    let SHA1 = new Hashes.SHA1()\r\n    let oldPasswordHash = data.oldPassword === '' ? '' : SHA1.hex(data.oldPassword)\r\n    let newPasswordHash = data.newPassword === '' ? '' : SHA1.hex(data.newPassword)\r\n    let confirmPasswordHash = data.confirmPassword === '' ? '' : SHA1.hex(data.confirmPassword)\r\n\r\n    return service.post(config.URI.CHANGE_PASSWORD, { oldPassword: oldPasswordHash, newPassword: newPasswordHash, confirmPassword: confirmPasswordHash })\r\n  }\r\n}\r\n","import accountActions from '../../account/AccountActions'\r\n\r\nlet errorUtil = {\r\n  handleErrors: (error, dispatch, actionType) => {\r\n    if(error.error == null || error.description == null) {\r\n      dispatch(failure(actionType, {Message: 'A server error has occurred. Please try again later.'}))\r\n      return\r\n    }\r\n\r\n    if(error.Error === \"Forbidden\")\r\n      dispatch(accountActions.logout('Session has expired. Please login again.'))\r\n    else\r\n      dispatch(failure(actionType, error))\r\n  }\r\n}\r\n\r\nfunction failure(actionType, error) {\r\n  return { type: actionType, error }\r\n}\r\n\r\nexport default errorUtil","import actionTypes from './AccountActionTypes'\r\nimport accountService from './AccountService'\r\nimport config from '../config'\r\nimport errorUtil from '../common/util/ErrorUtil'\r\n\r\nlet accountActions = {\r\n  clearErrors: () => {\r\n    return dispatch => {dispatch({ type: actionTypes.CLEAR_ERRORS })}\r\n  },\r\n  login: (data) => {\r\n    return dispatch => {\r\n      dispatch({ type: actionTypes.LOGIN_REQUEST })\r\n  \r\n      accountService.login(data)\r\n        .then(\r\n          responseData => dispatch(success(responseData.sessionToken, data.username)),\r\n          error => errorUtil.handleErrors(error, dispatch, actionTypes.LOGIN_FAILURE)\r\n        )\r\n    }\r\n  \r\n    function success(token, username) {\r\n      storeSessionData(token, username)\r\n      return { type: actionTypes.LOGIN_SUCCESS }\r\n    }\r\n  },\r\n  logout: (message) => {\r\n    return dispatch => {\r\n      accountService.logout()\r\n        .then(() => dispatch(success(message)),() => dispatch(success()))\r\n    }\r\n  \r\n    function success(message) {\r\n      sessionStorage.clear()\r\n      return { type: actionTypes.LOGOUT, message }\r\n    }\r\n  },\r\n  register: (data) => {\r\n    return dispatch => {\r\n      dispatch({ type: actionTypes.REGISTER_REQUEST })\r\n  \r\n      accountService.register(data)\r\n        .then(\r\n          responseData => dispatch(success(responseData.sessionToken, data.username)),\r\n          error => errorUtil.handleErrors(error, dispatch, actionTypes.REGISTER_FAILURE)\r\n        )\r\n    }\r\n  \r\n    function success(token, username) {\r\n      storeSessionData(token, username)\r\n      return { type: actionTypes.REGISTER_SUCCESS }\r\n    }\r\n  },\r\n  changePassword: (data) => {\r\n    return dispatch => {\r\n      dispatch({ type: actionTypes.CHANGE_PASSWORD_REQUEST })\r\n  \r\n      accountService.changePassword(data)\r\n        .then(\r\n          () => dispatch(accountActions.logout(\"Password changed. Please login with your new password.\")),\r\n          error => errorUtil.handleErrors(error, dispatch, actionTypes.CHANGE_PASSWORD_FAILURE)\r\n        )\r\n    }\r\n  }\r\n}\r\n\r\nfunction storeSessionData(token, username) {\r\n  sessionStorage.setItem(config.SESSION_STORAGE_SESSION_TOKEN, token)\r\n  sessionStorage.setItem(config.SESSION_STORAGE_USERNAME, username)\r\n}\r\n\r\nexport default accountActions","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './HeaderNav.css'\r\n\r\nclass HeaderNav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark navbar-logo\">\r\n        <div className=\"container body-container high-res-height low-res-margin\">\r\n          <Link className=\"navbar-brand\" to={`${process.env.PUBLIC_URL}/main/`}><i className=\"fas fa-biohazard logo\"></i></Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCustom\">\r\n            <i className=\"fas fa-bars white-icon\"></i>\r\n          </button>\r\n          <div className=\"navbar-collapse collapse\" id=\"navbarCustom\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item nav-item-fix\">\r\n                <Link className=\"nav-link\" to={`${process.env.PUBLIC_URL}/main/mypath`}>Test</Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <button className=\"btn btn-link nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Account</button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <Link className=\"dropdown-item\" to={`${process.env.PUBLIC_URL}/main/changepassword`}>Change Password</Link>\r\n                  <Link className=\"dropdown-item\" to={`${process.env.PUBLIC_URL}/main/mypath`}>Settings</Link>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <button className=\"btn btn-link dropdown-item\" onClick={this.props.handleLogout}>Logout</button>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderNav","import React from 'react'\r\n\r\nexport default () => (\r\n  <div>\r\n    Coming soon...\r\n  </div>\r\n)","import React, { Component } from 'react'\r\n\r\nclass MessageBox extends Component {\r\n  render() {\r\n    const {message, showWhen, type} = this.props\r\n\r\n    if(!showWhen)\r\n      return null\r\n\r\n    return (\r\n      <div className={`alert ${type === 'error' ? 'alert-danger' : ''} ${type === 'warning' ? 'alert-warn' : ''} ${type === 'info' ? 'alert-info' : ''}`}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{paddingRight: \"5px\"}}><i className={`fas ${type === 'info' ? 'fa-info-circle' : 'fa-exclamation-circle'}`}></i></td>\r\n              <td>{message}</td>\r\n            </tr>\r\n          </tbody>            \r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageBox","import React, { Component } from 'react'\r\nimport MessageBox from './MessageBox'\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    const {error,warning,info} = this.props\r\n\r\n    return (\r\n      <div>\r\n        <MessageBox showWhen={error} message={error ? error.description : ''} type=\"error\" />\r\n        <MessageBox showWhen={warning} message={warning} type=\"warning\" />\r\n        <MessageBox showWhen={info} message={info} type=\"info\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Message","import React, { Component } from 'react'\r\n\r\nclass FieldMessage extends Component {\r\n  getErrorDescription(fieldError) {\r\n    if(fieldError.properties == null)\r\n      return fieldError.description\r\n    \r\n    let description = fieldError.description;\r\n    for(let i=1;i<=fieldError.properties.length;i++) {\r\n      description = description.replace('$' + i, fieldError.properties[i-1])\r\n    }\r\n    return description\r\n  }\r\n\r\n  render() {\r\n    const {error, errorKey} = this.props\r\n    if (error == null || error.fields == null || error.fields[errorKey] == null)\r\n      return null\r\n\r\n    return (\r\n      <div className=\"invalid-feedback\">\r\n        {error.fields[errorKey].map((fieldError, i) => {\r\n            return (\r\n              <div key={i}>{this.getErrorDescription(fieldError)}</div>\r\n            )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FieldMessage","import React, { Component } from 'react'\r\nimport FieldMessage from './FieldMessage'\r\n\r\nclass Field extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showPassword: false\r\n    }\r\n\r\n    this.toggleShowPassword = this.toggleShowPassword.bind(this)\r\n  }\r\n\r\n  toggleShowPassword() {\r\n    this.setState({showPassword: !this.state.showPassword})\r\n  }\r\n  \r\n  hasErrors(errorKey) {\r\n    const { error } = this.props\r\n    return error != null && error.fields != null && error.fields[errorKey] != null\r\n  }\r\n\r\n  render() {\r\n\r\n    const {showWhen, name, label, type, autoFocus, errorKey, disabled, onChange, onBlur, value, placeholder, error, passwordVisibilityToggle} = this.props\r\n    const {showPassword} = this.state\r\n\r\n    if(showWhen !== undefined && !showWhen)\r\n      return null\r\n\r\n    if(type==='textarea') \r\n      return (\r\n        <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <textarea\r\n            autoFocus={autoFocus} \r\n            className={\"form-control \" + (this.hasErrors(errorKey) ? \"is-invalid\" : \"\")} \r\n            disabled={disabled} \r\n            name={name} \r\n            onChange={onChange} \r\n            onBlur={onBlur}\r\n            value={value}\r\n            placeholder={placeholder} />\r\n          <FieldMessage error={error} errorKey={errorKey} />\r\n        </div>\r\n      )\r\n\r\n    if(type==='password' && passwordVisibilityToggle) \r\n        return (\r\n          <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group\">\r\n              <input type={showPassword ? 'text' : 'password'}\r\n                autoFocus={autoFocus} \r\n                className={\"form-control \" + (this.hasErrors(errorKey) ? \"is-invalid\" : \"\")} \r\n                disabled={disabled} \r\n                name={name} \r\n                onChange={onChange} \r\n                onBlur={onBlur}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                aria-describedby=\"basic-addon2\" />\r\n              <div className=\"input-group-append\">\r\n                {showPassword && <i id=\"basic-addon2\" className=\"fas fa-eye-slash clickable input-group-text\" aria-hidden=\"true\" onClick={this.toggleShowPassword}></i>}\r\n                {!showPassword && <i id=\"basic-addon2\" className=\"fas fa-eye clickable input-group-text\" aria-hidden=\"true\" onClick={this.toggleShowPassword}></i>}\r\n              </div>\r\n            </div>\r\n            <FieldMessage error={error} errorKey={errorKey} />\r\n          </div>\r\n        )\r\n\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type}\r\n          autoFocus={autoFocus} \r\n          className={\"form-control \" + (this.hasErrors(errorKey) ? \"is-invalid\" : \"\")} \r\n          disabled={disabled} \r\n          name={name} \r\n          onChange={onChange} \r\n          onBlur={onBlur}\r\n          value={value}\r\n          placeholder={placeholder} />\r\n        <FieldMessage error={error} errorKey={errorKey} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Field\r\n\r\n","import React, { Component } from 'react'\r\nimport './Spinner.css'\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    const {showWhen, message} = this.props\r\n\r\n    if(showWhen)\r\n      return (\r\n        <div className=\"spinner_panel row\">\r\n          <div className=\"col-sm-12 text-center\">\r\n            <i className=\"fas fa-circle-notch fa-spin\"></i> {message}\r\n              </div>\r\n        </div>\r\n      )\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Spinner","import React, { Component } from 'react'\r\n\r\nclass CenteredContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      left: 3,\r\n      right: 3,\r\n      middle: 6\r\n    }\r\n\r\n    this.getSize = this.getSize.bind(this)\r\n  }\r\n\r\n  getSize(container) {\r\n    return this.props[container] === undefined ? this.state[container] : this.props[container]\r\n  }\r\n\r\n  getClasses = () => {\r\n    let classes = \"container-fluid top-page-padding \"\r\n    return this.props.className ? classes + this.props.className : classes\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={this.getClasses()}>\r\n        <div className=\"row\">\r\n          <div className={\"col-md-\" + this.getSize('left')}></div>\r\n          <div className={\"col-md-\" + this.getSize('middle')}>\r\n            {this.props.children}\r\n          </div>\r\n          <div className={\"col-md-\" + this.getSize('right')}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CenteredContainer\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass SubmitButton extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault()\r\n    this.props.onClick()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {showWhen, label, disabled} = this.props\r\n\r\n    if(showWhen !== undefined && !showWhen)\r\n      return null\r\n\r\n    return (\r\n      <input type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={disabled}\r\n            onClick={this.submit}\r\n            value={label}></input>   \r\n    )\r\n  }\r\n}\r\n\r\nexport default SubmitButton\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport actions from './AccountActions'\r\nimport Message from '../common/components/Message'\r\nimport Field from '../common/components/Field'\r\nimport Spinner from '../common/components/Spinner'\r\nimport CenteredContainer from '../common/components/CenteredContainer'\r\nimport SubmitButton from '../common/components/SubmitButton'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(actions.clearErrors())\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleChangePassword = (e) => {\r\n    const { oldPassword, newPassword, confirmPassword } = this.state\r\n    const { dispatch } = this.props\r\n\r\n    dispatch(actions.changePassword({oldPassword, newPassword, confirmPassword}))\r\n    this.clearPassword()\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({ oldPassword: '', newPassword: '', confirmPassword: '' })\r\n  }\r\n\r\n  render() {\r\n    const { saving, error } = this.props\r\n    const { oldPassword, newPassword, confirmPassword } = this.state\r\n\r\n    return (\r\n      <CenteredContainer left={2} middle={6} right={2}>   \r\n        <Spinner showWhen={saving} message=\"changing password...\" />\r\n        {!saving && \r\n          <div>\r\n            <Message error={error} />\r\n            <form>\r\n              <Field  type=\"password\" \r\n                      name=\"oldPassword\"\r\n                      errorKey=\"oldPassword\" \r\n                      label=\"Old Password\"\r\n                      autoFocus={true}\r\n                      error={error}\r\n                      value={oldPassword} \r\n                      disabled={saving}\r\n                      onChange={this.handleChange} />\r\n\r\n              <Field  type=\"password\" \r\n                      name=\"newPassword\"\r\n                      errorKey=\"newPassword\" \r\n                      label=\"New Password\" \r\n                      error={error}\r\n                      value={newPassword} \r\n                      disabled={saving}\r\n                      onChange={this.handleChange} />\r\n\r\n              <Field  type=\"password\" \r\n                      name=\"confirmPassword\"\r\n                      errorKey=\"confirmPassword\" \r\n                      label=\"Confirm New Password\" \r\n                      error={error}\r\n                      value={confirmPassword} \r\n                      disabled={saving}\r\n                      onChange={this.handleChange} />        \r\n                            \r\n              <div className=\"row button-top-padding\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <SubmitButton \r\n                      onClick={this.handleChangePassword}\r\n                      label=\"Change Password\" />\r\n\r\n                  <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/`}>Cancel</Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        }\r\n      </CenteredContainer>\r\n    )\r\n  }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n  saving: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { saving, error } = state.accountReducer\r\n\r\n  return {\r\n    saving, error\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChangePassword)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport accountActions from '../account/AccountActions'\r\nimport HeaderNav from './HeaderNav'\r\nimport ComingSoon from './ComingSoonPage'\r\nimport ChangePassword from '../account/ChangePassword'\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleLogout = this.handleLogout.bind(this)\r\n  }\r\n  \r\n  componentWillMount() {\r\n    document.body.className = ''\r\n  }\r\n\r\n  handleLogout() {\r\n    const { dispatch } = this.props\r\n    dispatch(accountActions.logout())\r\n  }\r\n\r\n  isOnRootPath(location) {\r\n    const { pathname } = location\r\n    return pathname.endsWith('/main') || pathname.endsWith('/main/')\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.loggedIn)\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n    else {\r\n      const { match } = this.props\r\n\r\n      return (\r\n        <div>\r\n          <HeaderNav handleLogout={this.handleLogout}></HeaderNav>\r\n          {this.isOnRootPath(this.props.location) && \r\n            <div>Root</div>\r\n          }\r\n          {!this.isOnRootPath(this.props.location) && \r\n            <div>\r\n              <Route path={`${match.path}/mypath`} component={ComingSoon} />\r\n              <Route path={`${match.path}/changepassword`} component={ChangePassword} />\r\n            </div> \r\n          }\r\n        </div>\r\n      )\r\n     }\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  loggedIn: PropTypes.bool\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { loggedIn } = state.accountReducer\r\n  return {\r\n    loggedIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport actions from './AccountActions'\r\nimport Message from '../common/components/Message'\r\nimport Field from '../common/components/Field'\r\nimport Spinner from '../common/components/Spinner'\r\nimport CenteredContainer from '../common/components/CenteredContainer'\r\nimport SubmitButton from '../common/components/SubmitButton'\r\nimport { Link } from 'react-router-dom'\r\nimport Hashes from 'jshashes'\r\nimport './AccountPage.css'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = 'full-back'\r\n    this.props.dispatch(actions.clearErrors())\r\n    this.logout()\r\n  }\r\n\r\n  logout() {\r\n    const { dispatch, isLoggedIn } = this.props\r\n    if(isLoggedIn)\r\n      dispatch(actions.logout())\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleLogin = (e) => {\r\n    const { username, password } = this.state\r\n    const { dispatch } = this.props\r\n\r\n    let SHA1 = new Hashes.SHA1()\r\n    let passwordHash = SHA1.hex(password)\r\n\r\n    dispatch(actions.login({username, password:passwordHash}))\r\n    this.clearPassword()\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({ password: '' })\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, fetching, error, message } = this.props\r\n    const { username, password } = this.state\r\n\r\n    if (loggedIn)\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n    \r\n    return (\r\n      <CenteredContainer left={4} middle={4} right={4} className=\"account-div\"> \r\n        <div className=\"inner-panel\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <i className=\"fas fa-biohazard logo\"></i>\r\n            </div>\r\n          </div>\r\n          <br /><br />\r\n          <Spinner showWhen={fetching} message=\"logging in...\" />\r\n          {!fetching && \r\n            <div>\r\n              <Message error={error} info={message} />\r\n              <form>\r\n                <Field  type=\"text\" \r\n                        name=\"username\"\r\n                        errorKey=\"username\" \r\n                        label=\"Username (e-mail)\"\r\n                        autoFocus={true}\r\n                        error={error}\r\n                        value={username} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n\r\n                <Field  type=\"password\" \r\n                        name=\"password\"\r\n                        errorKey=\"password\" \r\n                        label=\"Password\" \r\n                        error={error}\r\n                        value={password} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n                              \r\n                <div className=\"row button-top-padding\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <SubmitButton \r\n                        disabled={fetching} \r\n                        onClick={this.handleLogin}\r\n                        label=\"Login\" />\r\n\r\n                    <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/register`}>Register</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          }\r\n        </div>     \r\n      </CenteredContainer>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  fetching: PropTypes.bool,\r\n  loggedIn: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { fetching, loggedIn, error, message } = state.accountReducer\r\n\r\n  return {\r\n    fetching, loggedIn, error, message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport actions from './AccountActions'\r\nimport Message from '../common/components/Message'\r\nimport Field from '../common/components/Field'\r\nimport Spinner from '../common/components/Spinner'\r\nimport CenteredContainer from '../common/components/CenteredContainer'\r\nimport SubmitButton from '../common/components/SubmitButton'\r\nimport { Link } from 'react-router-dom'\r\nimport './AccountPage.css'\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = 'full-back'\r\n    this.props.dispatch(actions.clearErrors())\r\n    this.logout()\r\n  }\r\n  \r\n  logout() {\r\n    const { dispatch, isLoggedIn } = this.props\r\n    if(isLoggedIn)\r\n      dispatch(actions.logout())\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleCreateAccount = (e) => {\r\n    const { username, password, confirmPassword } = this.state\r\n    const { dispatch } = this.props\r\n\r\n    dispatch(actions.register({username, password, confirmPassword}))\r\n    this.clearPassword()\r\n  }\r\n\r\n  readyForSubmit = () => {\r\n    return this.state.username != null && this.state.password != null && this.state.confirmPassword != null\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({ password: '', confirmPassword: '' })\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, fetching, error, message } = this.props\r\n    const { username, password, confirmPassword } = this.state\r\n\r\n    if (loggedIn)\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n    \r\n    return (\r\n      <CenteredContainer left={4} middle={4} right={4} className=\"account-div\">   \r\n        <div className=\"inner-panel\">   \r\n          <div className=\"row logo-top-padding\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <i className=\"fas fa-biohazard logo\"></i>\r\n            </div>\r\n          </div>\r\n          <br /><br />\r\n          <Spinner showWhen={fetching} message=\"logging in...\" />\r\n          {!fetching && \r\n            <div>\r\n              <Message error={error} info={message} />\r\n              <form>\r\n                <Field  type=\"text\" \r\n                        name=\"username\"\r\n                        errorKey=\"username\" \r\n                        label=\"Username (e-mail)\"\r\n                        autoFocus={true}\r\n                        error={error}\r\n                        value={username} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n\r\n                <Field  type=\"password\" \r\n                        name=\"password\"\r\n                        errorKey=\"password\" \r\n                        label=\"Password\" \r\n                        error={error}\r\n                        value={password} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n\r\n                <Field  type=\"password\" \r\n                        name=\"confirmPassword\"\r\n                        errorKey=\"confirmPassword\" \r\n                        label=\"Confirm Password\" \r\n                        error={error}\r\n                        value={confirmPassword} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />        \r\n                              \r\n                <div className=\"row button-top-padding\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <SubmitButton \r\n                        disabled={fetching || !this.readyForSubmit} \r\n                        onClick={this.handleCreateAccount}\r\n                        label=\"Create Account\" />\r\n\r\n                    <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/login`}>Cancel</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          }\r\n        </div>\r\n      </CenteredContainer>\r\n    )\r\n  }\r\n}\r\n\r\nRegisterPage.propTypes = {\r\n  fetching: PropTypes.bool,\r\n  loggedIn: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { fetching, loggedIn, error, message } = state.accountReducer\r\n\r\n  return {\r\n    fetching, loggedIn, error, message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegisterPage)","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport store, { history } from './store'\r\nimport App from './root/App'\r\nimport config from './config'\r\nimport './common/Common.css'\r\nimport 'react-day-picker/lib/style.css'\r\n\r\nconst target = document.querySelector('#root')\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history} basename={config.BASE_NAME}>\r\n        <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  target\r\n)","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport RootRedirect from './RootRedirect'\r\nimport Main from './Main'\r\nimport Login from '../account/LoginPage'\r\nimport Register from '../account/RegisterPage'\r\n\r\nexport default () => (\r\n  <div>\r\n    <Route exact path={`${process.env.PUBLIC_URL}/`} component={RootRedirect} />\r\n    <Route path={`${process.env.PUBLIC_URL}/main`} component={Main} />\r\n    <Route path={`${process.env.PUBLIC_URL}/login`} component={Login} />\r\n    <Route path={`${process.env.PUBLIC_URL}/register`} component={Register} />\r\n  </div>\r\n)"],"sourceRoot":""}