{"version":3,"sources":["config.js","account/AccountActionTypes.js","account/AccountReducer.js","reducers.js","store.js","root/RootRedirect.js","common/util/ServiceUtil.js","account/AccountService.js","common/util/ErrorUtil.js","account/AccountActions.js","root/HeaderNav.js","root/ComingSoonPage.js","common/components/MessageBox.js","common/components/Message.js","common/components/FieldMessage.js","common/components/Field.js","common/components/Spinner.js","common/components/CenteredContainer.js","common/components/SubmitButton.js","account/ChangePassword.js","root/Main.js","account/LoginPage.js","account/RegisterPage.js","index.js","root/App.js"],"names":["config","SESSION_STORAGE_SESSION_TOKEN","SESSION_STORAGE_USERNAME","SERVICE_URL","BASE_NAME","URI","SESSION","ACCOUNT","CHANGE_PASSWORD","AccountActionTypes","CLEAR_ERRORS","CLEAR_ERRORS_AND_MESSAGES","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","initialState","sessionStorage","getItem","isLoggedIn","history","AccountReducer","state","arguments","length","undefined","action","type","actionTypes","Object","objectSpread","error","message","username","isSessionExpired","fetching","loggedIn","sessionExpired","saving","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","store","createStore","connectRouter","combineReducers","router","accountReducer","RootRedirect","react_default","a","createElement","Redirect","to","process","ServiceUtil","postNoAuth","post","get","save","erase","_callee","body","request","response","regenerator_default","wrap","_context","prev","next","method","headers","Content-Type","JSON","stringify","fetch","sent","handleResponse","abrupt","stop","_callee2","_context2","getAuth","_callee3","id","uri","_context3","_callee4","_context4","_callee5","_context5","Authorization","text","then","data","parse","ok","statusText","Promise","reject","AccountService","service","password","SHA1","Hashes","passwordHash","hex","confirmPasswordHash","confirmPassword","oldPasswordHash","oldPassword","newPasswordHash","newPassword","failure","actionType","errorUtil","handleErrors","dispatch","description","accountActions","Message","clearErrorsAndMessages","clearErrors","login","accountService","responseData","token","sessionToken","storeSessionData","logout","success","clear","register","changePassword","setItem","HeaderNav","className","Link","data-toggle","data-target","href","aria-haspopup","aria-expanded","aria-labelledby","onClick","this","props","handleLogout","Component","ComingSoonPage","MessageBox","_this$props","showWhen","style","paddingRight","warning","info","components_MessageBox","FieldMessage","fieldError","properties","i","replace","_this","errorKey","fields","map","key","getErrorDescription","Field","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showPassword","toggleShowPassword","bind","assertThisInitialized","setState","name","label","autoFocus","disabled","onChange","onBlur","value","placeholder","passwordVisibilityToggle","htmlFor","hasErrors","components_FieldMessage","aria-describedby","aria-hidden","Spinner","CenteredContainer","left","right","middle","getSize","getClasses","container","classes","children","SubmitButton","submit","e","preventDefault","ChangePassword","handleChange","handleChangePassword","actions","_e$target","target","defineProperty","_this$state","clearPassword","_this$state2","components_CenteredContainer","common_components_Spinner","components_Message","components_Field","components_SubmitButton","connect","_state$accountReducer","Main","document","location","pathname","endsWith","match","src_root_HeaderNav","isOnRootPath","Route","path","component","ComingSoon","Login","handleLogin","_this$props2","RegisterPage","handleCreateAccount","readyForSubmit","querySelector","render","es","esm","basename","exact","Register"],"mappings":"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","file":"static/js/main.f4123abd.chunk.js","sourcesContent":["export default {\r\n  SESSION_STORAGE_SESSION_TOKEN: 'SessionToken',\r\n  SESSION_STORAGE_USERNAME: 'username',\r\n\r\n  SERVICE_URL: '',\r\n\r\n  BASE_NAME: '/',\r\n\r\n  URI: {\r\n    SESSION: '/api/v1/session',\r\n    ACCOUNT: '/api/v1/account',\r\n    CHANGE_PASSWORD: '/api/v1/account/changepassword',\r\n  },\r\n};\r\n","export default {\r\n  CLEAR_ERRORS: 'CLEAR_ERRORS',\r\n  CLEAR_ERRORS_AND_MESSAGES: 'CLEAR_ERRORS_AND_MESSAGES',\r\n\r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n\r\n  LOGOUT: 'LOGOUT',\r\n\r\n  REGISTER_REQUEST: 'REGISTER_REQUEST',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n\r\n  CHANGE_PASSWORD_REQUEST: 'CHANGE_PASSWORD_REQUEST',\r\n  CHANGE_PASSWORD_SUCCESS: 'CHANGE_PASSWORD_SUCCESS',\r\n  CHANGE_PASSWORD_FAILURE: 'CHANGE_PASSWORD_FAILURE',\r\n};\r\n","import config from '../config';\r\nimport actionTypes from './AccountActionTypes';\r\n\r\nlet initialState = {};\r\nconst sessionToken = sessionStorage.getItem(config.SESSION_STORAGE_SESSION_TOKEN);\r\nif (sessionToken) {\r\n  initialState = {isLoggedIn: true};\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case actionTypes.CLEAR_ERRORS_AND_MESSAGES:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        message: null,\r\n      };\r\n    case actionTypes.REGISTER_REQUEST:\r\n    case actionTypes.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        isSessionExpired: false,\r\n        fetching: true,\r\n        error: null,\r\n        message: null,\r\n      };\r\n    case actionTypes.REGISTER_SUCCESS:\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        loggedIn: true,\r\n      };\r\n    case actionTypes.REGISTER_FAILURE:\r\n    case actionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        error: action.error,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        sessionExpired: action.sessionExpired,\r\n        saving: false,\r\n        loggedIn: false,\r\n        message: action.message,\r\n      };\r\n    case actionTypes.CHANGE_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        saving: true,\r\n        error: null,\r\n      };\r\n    case actionTypes.CHANGE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        saving: false,\r\n        error: null,\r\n      };\r\n    case actionTypes.CHANGE_PASSWORD_FAILURE:\r\n      return {\r\n        ...state,\r\n        saving: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {connectRouter} from 'connected-react-router';\r\nimport accountReducer from './account/AccountReducer';\r\n\r\nexport default (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  accountReducer,\r\n});\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport {connectRouter, routerMiddleware} from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport {createBrowserHistory} from 'history';\r\nimport rootReducer from './reducers';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst initialState = {};\r\nconst enhancers = [];\r\nconst middleware = [\r\n  thunk,\r\n  routerMiddleware(history),\r\n];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension());\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n);\r\n\r\nconst store = createStore(\r\n    connectRouter(history)(rootReducer(history)),\r\n    initialState,\r\n    composedEnhancers\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default () => (\r\n  <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n);\r\n","import config from '../../config';\r\n\r\nexport default {\r\n  postNoAuth,\r\n  post,\r\n  get,\r\n  save,\r\n  erase,\r\n};\r\n\r\nasync function postNoAuth(URI, body) {\r\n  const request = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify(body),\r\n  };\r\n  const response = await fetch(config.SERVICE_URL + URI, request);\r\n  return await handleResponse(response);\r\n}\r\n\r\nasync function post(URI, body) {\r\n  const request = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json', ...getAuth()},\r\n    body: JSON.stringify(body),\r\n  };\r\n  const response = await fetch(config.SERVICE_URL + URI, request);\r\n  return await handleResponse(response);\r\n}\r\n\r\nasync function save(URI, id, body) {\r\n  let uri = config.SERVICE_URL + URI;\r\n  let method = 'POST';\r\n  if (id !== undefined) {\r\n    method = 'PUT';\r\n    uri += '/' + id;\r\n  }\r\n\r\n  const request = {\r\n    method: method,\r\n    headers: {'Content-Type': 'application/json', ...getAuth()},\r\n    body: JSON.stringify(body),\r\n  };\r\n  const response = await fetch(uri, request);\r\n  return await handleResponse(response);\r\n}\r\n\r\nasync function get(URI, id) {\r\n  const request = {\r\n    method: 'GET',\r\n    headers: {'Content-Type': 'application/json', ...getAuth()},\r\n  };\r\n  let uri = config.SERVICE_URL + URI;\r\n  if (id !== undefined) {\r\n    uri += '/' + id;\r\n  }\r\n\r\n  const response = await fetch(uri, request);\r\n  return await handleResponse(response);\r\n}\r\n\r\nasync function erase(URI, id) {\r\n  const request = {\r\n    method: 'DELETE',\r\n    headers: {'Content-Type': 'application/json', ...getAuth()},\r\n  };\r\n  let uri = config.SERVICE_URL + URI;\r\n  if (id !== undefined) {\r\n    uri += '/' + id;\r\n  }\r\n\r\n  const response = await fetch(uri, request);\r\n  return await handleResponse(response);\r\n}\r\n\r\nfunction getAuth() {\r\n  return {'Authorization': 'Custom ' + sessionStorage.getItem(config.SESSION_STORAGE_SESSION_TOKEN)};\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (response.ok) {\r\n      return data;\r\n    }\r\n\r\n    const error = data || response.statusText;\r\n    return Promise.reject(error);\r\n  });\r\n}\r\n","import service from '../common/util/ServiceUtil';\r\nimport config from '../config';\r\nimport Hashes from 'jshashes';\r\n\r\nexport default {\r\n  login: (data) => service.postNoAuth(config.URI.SESSION, {username: data.username, password: data.password}),\r\n\r\n  register: (data) => {\r\n    const SHA1 = new Hashes.SHA1();\r\n    const passwordHash = data.password === '' ? '' : SHA1.hex(data.password);\r\n    const confirmPasswordHash = data.confirmPassword === '' ? '' : SHA1.hex(data.confirmPassword);\r\n\r\n    return service.post(config.URI.ACCOUNT, {username: data.username, password: passwordHash, confirmPassword: confirmPasswordHash});\r\n  },\r\n\r\n  logout: () => service.erase(config.URI.SESSION),\r\n\r\n  changePassword: (data) => {\r\n    const SHA1 = new Hashes.SHA1();\r\n    const oldPasswordHash = data.oldPassword === '' ? '' : SHA1.hex(data.oldPassword);\r\n    const newPasswordHash = data.newPassword === '' ? '' : SHA1.hex(data.newPassword);\r\n    const confirmPasswordHash = data.confirmPassword === '' ? '' : SHA1.hex(data.confirmPassword);\r\n\r\n    return service.post(config.URI.CHANGE_PASSWORD, {oldPassword: oldPasswordHash, newPassword: newPasswordHash, confirmPassword: confirmPasswordHash});\r\n  },\r\n};\r\n","import accountActions from '../../account/AccountActions';\r\n\r\nconst errorUtil = {\r\n  handleErrors: (error, dispatch, actionType) => {\r\n    if (error.error == null || error.description == null) {\r\n      dispatch(failure(actionType, {Message: 'A server error has occurred. Please try again later.'}));\r\n      return;\r\n    }\r\n\r\n    if (error.error === 'Forbidden') {\r\n      dispatch(accountActions.sessionExpired('Session has expired. Please login again.'));\r\n    } else {\r\n      dispatch(failure(actionType, error));\r\n    }\r\n  },\r\n};\r\n\r\nfunction failure(actionType, error) {\r\n  return {type: actionType, error};\r\n}\r\n\r\nexport default errorUtil;\r\n","import actionTypes from './AccountActionTypes';\r\nimport accountService from './AccountService';\r\nimport config from '../config';\r\nimport errorUtil from '../common/util/ErrorUtil';\r\n\r\nconst accountActions = {\r\n  clearErrorsAndMessages: () => {\r\n    return (dispatch) => {\r\n      dispatch({type: actionTypes.CLEAR_ERRORS_AND_MESSAGES});\r\n    };\r\n  },\r\n  clearErrors: () => {\r\n    return (dispatch) => {\r\n      dispatch({type: actionTypes.CLEAR_ERRORS});\r\n    };\r\n  },\r\n  login: (data) => {\r\n    return (dispatch) => {\r\n      dispatch({type: actionTypes.LOGIN_REQUEST});\r\n\r\n      accountService.login(data)\r\n          .then(\r\n              (responseData) => dispatch(success(responseData.sessionToken, data.username)),\r\n              (error) => errorUtil.handleErrors(error, dispatch, actionTypes.LOGIN_FAILURE)\r\n          );\r\n    };\r\n\r\n    function success(token, username) {\r\n      storeSessionData(token, username);\r\n      return {type: actionTypes.LOGIN_SUCCESS};\r\n    }\r\n  },\r\n  logout: (message) => {\r\n    return (dispatch) => {\r\n      accountService.logout()\r\n          .then(() => dispatch(success(message)), () => dispatch(success(message)));\r\n    };\r\n\r\n    function success(message) {\r\n      sessionStorage.clear();\r\n      return {type: actionTypes.LOGOUT, message};\r\n    }\r\n  },\r\n  sessionExpired: (message) => {\r\n    sessionStorage.clear();\r\n    return {type: actionTypes.LOGOUT, message};\r\n  },\r\n  register: (data) => {\r\n    return (dispatch) => {\r\n      dispatch({type: actionTypes.REGISTER_REQUEST});\r\n\r\n      accountService.register(data)\r\n          .then(\r\n              (responseData) => dispatch(success(responseData.sessionToken, data.username)),\r\n              (error) => errorUtil.handleErrors(error, dispatch, actionTypes.REGISTER_FAILURE)\r\n          );\r\n    };\r\n\r\n    function success(token, username) {\r\n      storeSessionData(token, username);\r\n      return {type: actionTypes.REGISTER_SUCCESS};\r\n    }\r\n  },\r\n  changePassword: (data) => {\r\n    return (dispatch) => {\r\n      dispatch({type: actionTypes.CHANGE_PASSWORD_REQUEST});\r\n\r\n      accountService.changePassword(data)\r\n          .then(\r\n              () => dispatch(accountActions.logout('Password changed. Please login with your new password.')),\r\n              (error) => errorUtil.handleErrors(error, dispatch, actionTypes.CHANGE_PASSWORD_FAILURE)\r\n          );\r\n    };\r\n  },\r\n};\r\n\r\nfunction storeSessionData(token, username) {\r\n  sessionStorage.setItem(config.SESSION_STORAGE_SESSION_TOKEN, token);\r\n  sessionStorage.setItem(config.SESSION_STORAGE_USERNAME, username);\r\n}\r\n\r\nexport default accountActions;\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './HeaderNav.css';\r\n\r\nclass HeaderNav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark navbar-logo\">\r\n        <div className=\"container body-container high-res-height low-res-margin\">\r\n          <Link className=\"navbar-brand\" to={`${process.env.PUBLIC_URL}/main/`}><i className=\"fas fa-biohazard logo\"></i></Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCustom\">\r\n            <i className=\"fas fa-bars white-icon\"></i>\r\n          </button>\r\n          <div className=\"navbar-collapse collapse\" id=\"navbarCustom\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item nav-item-fix\">\r\n                <Link className=\"nav-link\" to={`${process.env.PUBLIC_URL}/main/mypath`}>Test</Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <button className=\"btn btn-link nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Account</button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <Link className=\"dropdown-item\" to={`${process.env.PUBLIC_URL}/main/changepassword`}>Change Password</Link>\r\n                  <Link className=\"dropdown-item\" to={`${process.env.PUBLIC_URL}/main/mypath`}>Settings</Link>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <button className=\"btn btn-link dropdown-item\" onClick={this.props.handleLogout}>Logout</button>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderNav;\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div>\r\n    Coming soon...\r\n  </div>\r\n);\r\n","import React, {Component} from 'react';\r\n\r\nclass MessageBox extends Component {\r\n  render() {\r\n    const {message, showWhen, type} = this.props;\r\n\r\n    if (!showWhen) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className={`alert ${type === 'error' ? 'alert-danger' : ''} ${type === 'warning' ? 'alert-warn' : ''} ${type === 'info' ? 'alert-info' : ''}`}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{paddingRight: '5px'}}><i className={`fas ${type === 'info' ? 'fa-info-circle' : 'fa-exclamation-circle'}`}></i></td>\r\n              <td>{message}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageBox;\r\n","import React, {Component} from 'react';\r\nimport MessageBox from './MessageBox';\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    const {error, warning, info} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <MessageBox showWhen={error} message={error ? error.description : ''} type=\"error\" />\r\n        <MessageBox showWhen={warning} message={warning} type=\"warning\" />\r\n        <MessageBox showWhen={info} message={info} type=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React, {Component} from 'react';\r\n\r\nclass FieldMessage extends Component {\r\n  getErrorDescription(fieldError) {\r\n    if (fieldError.properties == null) {\r\n      return fieldError.description;\r\n    }\r\n\r\n    let description = fieldError.description;\r\n    for (let i=1; i<=fieldError.properties.length; i++) {\r\n      description = description.replace('$' + i, fieldError.properties[i-1]);\r\n    }\r\n    return description;\r\n  }\r\n\r\n  render() {\r\n    const {error, errorKey} = this.props;\r\n    if (error == null || error.fields == null || error.fields[errorKey] == null) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"invalid-feedback\">\r\n        {error.fields[errorKey].map((fieldError, i) => {\r\n          return (\r\n            <div key={i}>{this.getErrorDescription(fieldError)}</div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FieldMessage;\r\n","import React, {Component} from 'react';\r\nimport FieldMessage from './FieldMessage';\r\n\r\nclass Field extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPassword: false,\r\n    };\r\n\r\n    this.toggleShowPassword = this.toggleShowPassword.bind(this);\r\n  }\r\n\r\n  toggleShowPassword() {\r\n    this.setState({showPassword: !this.state.showPassword});\r\n  }\r\n\r\n  hasErrors(errorKey) {\r\n    const {error} = this.props;\r\n    return error != null && error.fields != null && error.fields[errorKey] != null;\r\n  }\r\n\r\n  render() {\r\n    const {showWhen, name, label, type, autoFocus, errorKey, disabled, onChange, onBlur, value, placeholder, error, passwordVisibilityToggle} = this.props;\r\n    const {showPassword} = this.state;\r\n\r\n    if (showWhen !== undefined && !showWhen) {\r\n      return null;\r\n    }\r\n\r\n    if (type==='textarea') {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <textarea\r\n            autoFocus={autoFocus}\r\n            className={'form-control ' + (this.hasErrors(errorKey) ? 'is-invalid' : '')}\r\n            disabled={disabled}\r\n            name={name}\r\n            onChange={onChange}\r\n            onBlur={onBlur}\r\n            value={value}\r\n            placeholder={placeholder} />\r\n          <FieldMessage error={error} errorKey={errorKey} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (type==='password' && passwordVisibilityToggle) {\r\n      return (\r\n        <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <div className=\"input-group\">\r\n            <input type={showPassword ? 'text' : 'password'}\r\n              autoFocus={autoFocus}\r\n              className={'form-control ' + (this.hasErrors(errorKey) ? 'is-invalid' : '')}\r\n              disabled={disabled}\r\n              name={name}\r\n              onChange={onChange}\r\n              onBlur={onBlur}\r\n              value={value}\r\n              placeholder={placeholder}\r\n              aria-describedby=\"basic-addon2\" />\r\n            <div className=\"input-group-append\">\r\n              {showPassword && <i id=\"basic-addon2\" className=\"fas fa-eye-slash clickable input-group-text\" aria-hidden=\"true\" onClick={this.toggleShowPassword}></i>}\r\n              {!showPassword && <i id=\"basic-addon2\" className=\"fas fa-eye clickable input-group-text\" aria-hidden=\"true\" onClick={this.toggleShowPassword}></i>}\r\n            </div>\r\n          </div>\r\n          <FieldMessage error={error} errorKey={errorKey} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type}\r\n          autoFocus={autoFocus}\r\n          className={'form-control ' + (this.hasErrors(errorKey) ? 'is-invalid' : '')}\r\n          disabled={disabled}\r\n          name={name}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={value}\r\n          placeholder={placeholder} />\r\n        <FieldMessage error={error} errorKey={errorKey} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n\r\n","import React, {Component} from 'react';\r\nimport './Spinner.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    const {showWhen, message} = this.props;\r\n\r\n    if (showWhen) {\r\n      return (\r\n        <div className=\"spinner_panel row\">\r\n          <div className=\"col-sm-12 text-center\">\r\n            <i className=\"fas fa-circle-notch fa-spin\"></i> {message}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Spinner;\r\n","import React, {Component} from 'react';\r\n\r\nclass CenteredContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      left: 3,\r\n      right: 3,\r\n      middle: 6,\r\n    };\r\n\r\n    this.getSize = this.getSize.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n  }\r\n\r\n  getSize(container) {\r\n    return this.props[container] === undefined ? this.state[container] : this.props[container];\r\n  }\r\n\r\n  getClasses() {\r\n    const classes = 'container-fluid top-page-padding ';\r\n    return this.props.className ? classes + this.props.className : classes;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.getClasses()}>\r\n        <div className=\"row\">\r\n          <div className={'col-md-' + this.getSize('left')}></div>\r\n          <div className={'col-md-' + this.getSize('middle')}>\r\n            {this.props.children}\r\n          </div>\r\n          <div className={'col-md-' + this.getSize('right')}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CenteredContainer;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass SubmitButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault();\r\n    this.props.onClick();\r\n  }\r\n\r\n  render() {\r\n    const {showWhen, label, disabled} = this.props;\r\n\r\n    if (showWhen !== undefined && !showWhen) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <input type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        disabled={disabled}\r\n        onClick={this.submit}\r\n        value={label}></input>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport actions from './AccountActions';\r\nimport Message from '../common/components/Message';\r\nimport Field from '../common/components/Field';\r\nimport Spinner from '../common/components/Spinner';\r\nimport CenteredContainer from '../common/components/CenteredContainer';\r\nimport SubmitButton from '../common/components/SubmitButton';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangePassword = this.handleChangePassword.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(actions.clearErrors());\r\n  }\r\n\r\n  handleChange(e) {\r\n    const {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleChangePassword() {\r\n    const {oldPassword, newPassword, confirmPassword} = this.state;\r\n    const {dispatch} = this.props;\r\n\r\n    dispatch(actions.changePassword({oldPassword, newPassword, confirmPassword}));\r\n    this.clearPassword();\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({oldPassword: '', newPassword: '', confirmPassword: ''});\r\n  }\r\n\r\n  render() {\r\n    const {saving, error} = this.props;\r\n    const {oldPassword, newPassword, confirmPassword} = this.state;\r\n\r\n    return (\r\n      <CenteredContainer left={2} middle={6} right={2}>\r\n        <Spinner showWhen={saving} message=\"changing password...\" />\r\n        {!saving &&\r\n          <div>\r\n            <Message error={error} />\r\n            <form>\r\n              <Field type=\"password\"\r\n                name=\"oldPassword\"\r\n                errorKey=\"oldPassword\"\r\n                label=\"Old Password\"\r\n                autoFocus={true}\r\n                error={error}\r\n                value={oldPassword}\r\n                disabled={saving}\r\n                onChange={this.handleChange} />\r\n\r\n              <Field type=\"password\"\r\n                name=\"newPassword\"\r\n                errorKey=\"newPassword\"\r\n                label=\"New Password\"\r\n                error={error}\r\n                value={newPassword}\r\n                disabled={saving}\r\n                onChange={this.handleChange} />\r\n\r\n              <Field type=\"password\"\r\n                name=\"confirmPassword\"\r\n                errorKey=\"confirmPassword\"\r\n                label=\"Confirm New Password\"\r\n                error={error}\r\n                value={confirmPassword}\r\n                disabled={saving}\r\n                onChange={this.handleChange} />\r\n\r\n              <div className=\"row button-top-padding\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <SubmitButton\r\n                    onClick={this.handleChangePassword}\r\n                    label=\"Change Password\" />\r\n\r\n                  <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/`}>Cancel</Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        }\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n  saving: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string,\r\n  dispatch: PropTypes.func,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const {saving, error} = state.accountReducer;\r\n\r\n  return {\r\n    saving, error,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChangePassword);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport accountActions from '../account/AccountActions';\r\nimport HeaderNav from './HeaderNav';\r\nimport ComingSoon from './ComingSoonPage';\r\nimport ChangePassword from '../account/ChangePassword';\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = '';\r\n  }\r\n\r\n  handleLogout() {\r\n    const {dispatch} = this.props;\r\n    dispatch(accountActions.logout());\r\n  }\r\n\r\n  isOnRootPath(location) {\r\n    const {pathname} = location;\r\n    return pathname.endsWith('/main') || pathname.endsWith('/main/');\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.loggedIn) {\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/login`} />;\r\n    } else {\r\n      const {match} = this.props;\r\n\r\n      return (\r\n        <div>\r\n          <HeaderNav handleLogout={this.handleLogout}></HeaderNav>\r\n          {this.isOnRootPath(this.props.location) &&\r\n            <div>Root</div>\r\n          }\r\n          {!this.isOnRootPath(this.props.location) &&\r\n            <div>\r\n              <Route path={`${match.path}/mypath`} component={ComingSoon} />\r\n              <Route path={`${match.path}/changepassword`} component={ChangePassword} />\r\n            </div>\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  loggedIn: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const {loggedIn} = state.accountReducer;\r\n  return {\r\n    loggedIn,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport actions from './AccountActions';\r\nimport Message from '../common/components/Message';\r\nimport Field from '../common/components/Field';\r\nimport Spinner from '../common/components/Spinner';\r\nimport CenteredContainer from '../common/components/CenteredContainer';\r\nimport SubmitButton from '../common/components/SubmitButton';\r\nimport Hashes from 'jshashes';\r\nimport './AccountPage.css';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = 'full-back';\r\n    this.props.dispatch(actions.clearErrors());\r\n    this.logout();\r\n  }\r\n\r\n  logout() {\r\n    const {dispatch, isLoggedIn} = this.props;\r\n    if (isLoggedIn) {\r\n      dispatch(actions.logout());\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleLogin() {\r\n    const {username, password} = this.state;\r\n    const {dispatch} = this.props;\r\n\r\n    const SHA1 = new Hashes.SHA1();\r\n    const passwordHash = SHA1.hex(password);\r\n\r\n    dispatch(actions.login({username, password: passwordHash}));\r\n    this.clearPassword();\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({password: ''});\r\n  }\r\n\r\n  render() {\r\n    const {loggedIn, fetching, error, message} = this.props;\r\n    const {username, password} = this.state;\r\n\r\n    if (loggedIn) {\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/main`} />;\r\n    }\r\n\r\n    return (\r\n      <CenteredContainer left={4} middle={4} right={4} className=\"account-div\">\r\n        <div className=\"inner-panel\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <i className=\"fas fa-biohazard logo\"></i>\r\n            </div>\r\n          </div>\r\n          <br /><br />\r\n          <Spinner showWhen={fetching} message=\"logging in...\" />\r\n          {!fetching &&\r\n            <div>\r\n              <Message error={error} info={message} />\r\n              <form>\r\n                <Field type=\"text\"\r\n                  name=\"username\"\r\n                  errorKey=\"username\"\r\n                  label=\"Username (e-mail)\"\r\n                  autoFocus={true}\r\n                  error={error}\r\n                  value={username}\r\n                  disabled={fetching}\r\n                  onChange={this.handleChange} />\r\n\r\n                <Field type=\"password\"\r\n                  name=\"password\"\r\n                  errorKey=\"password\"\r\n                  label=\"Password\"\r\n                  error={error}\r\n                  value={password}\r\n                  disabled={fetching}\r\n                  onChange={this.handleChange} />\r\n\r\n                <div className=\"row button-top-padding\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <SubmitButton\r\n                      disabled={fetching}\r\n                      onClick={this.handleLogin}\r\n                      label=\"Login\" />\r\n\r\n                    <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/register`}>Register</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          }\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  fetching: PropTypes.bool,\r\n  loggedIn: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string,\r\n  dispatch: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const {fetching, loggedIn, error, message} = state.accountReducer;\r\n\r\n  return {\r\n    fetching, loggedIn, error, message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport actions from './AccountActions';\r\nimport Message from '../common/components/Message';\r\nimport Field from '../common/components/Field';\r\nimport Spinner from '../common/components/Spinner';\r\nimport CenteredContainer from '../common/components/CenteredContainer';\r\nimport SubmitButton from '../common/components/SubmitButton';\r\nimport {Link} from 'react-router-dom';\r\nimport './AccountPage.css';\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleCreateAccount = this.handleCreateAccount.bind(this);\r\n    this.readyForSubmit = this.readyForSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = 'full-back';\r\n    this.props.dispatch(actions.clearErrorsAndMessages());\r\n    this.logout();\r\n  }\r\n\r\n  logout() {\r\n    const {dispatch, isLoggedIn} = this.props;\r\n    if (isLoggedIn) {\r\n      dispatch(actions.logout());\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    const {name, value} = e.target;\r\n    this.setState({[name]: value});\r\n  }\r\n\r\n  handleCreateAccount() {\r\n    const {username, password, confirmPassword} = this.state;\r\n    const {dispatch} = this.props;\r\n\r\n    dispatch(actions.register({username, password, confirmPassword}));\r\n    this.clearPassword();\r\n  }\r\n\r\n  readyForSubmit() {\r\n    return this.state.username != null && this.state.password != null && this.state.confirmPassword != null;\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({password: '', confirmPassword: ''});\r\n  }\r\n\r\n  render() {\r\n    const {loggedIn, fetching, error, message} = this.props;\r\n    const {username, password, confirmPassword} = this.state;\r\n\r\n    if (loggedIn) {\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/main`} />;\r\n    }\r\n\r\n    return (\r\n      <CenteredContainer left={4} middle={4} right={4} className=\"account-div\">\r\n        <div className=\"inner-panel\">\r\n          <div className=\"row logo-top-padding\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <i className=\"fas fa-biohazard logo\"></i>\r\n            </div>\r\n          </div>\r\n          <br /><br />\r\n          <Spinner showWhen={fetching} message=\"logging in...\" />\r\n          {!fetching &&\r\n            <div>\r\n              <Message error={error} info={message} />\r\n              <form>\r\n                <Field type=\"text\"\r\n                  name=\"username\"\r\n                  errorKey=\"username\"\r\n                  label=\"Username (e-mail)\"\r\n                  autoFocus={true}\r\n                  error={error}\r\n                  value={username}\r\n                  disabled={fetching}\r\n                  onChange={this.handleChange} />\r\n\r\n                <Field type=\"password\"\r\n                  name=\"password\"\r\n                  errorKey=\"password\"\r\n                  label=\"Password\"\r\n                  error={error}\r\n                  value={password}\r\n                  disabled={fetching}\r\n                  onChange={this.handleChange} />\r\n\r\n                <Field type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  errorKey=\"confirmPassword\"\r\n                  label=\"Confirm Password\"\r\n                  error={error}\r\n                  value={confirmPassword}\r\n                  disabled={fetching}\r\n                  onChange={this.handleChange} />\r\n\r\n                <div className=\"row button-top-padding\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <SubmitButton\r\n                      disabled={fetching || !this.readyForSubmit}\r\n                      onClick={this.handleCreateAccount}\r\n                      label=\"Create Account\" />\r\n\r\n                    <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/login`}>Cancel</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          }\r\n        </div>\r\n      </CenteredContainer>\r\n    );\r\n  }\r\n}\r\n\r\nRegisterPage.propTypes = {\r\n  fetching: PropTypes.bool,\r\n  loggedIn: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string,\r\n  dispatch: PropTypes.func,\r\n  isLoggedIn: PropTypes.bool,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const {fetching, loggedIn, error, message} = state.accountReducer;\r\n\r\n  return {\r\n    fetching, loggedIn, error, message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegisterPage);\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {ConnectedRouter} from 'connected-react-router';\r\nimport store, {history} from './store';\r\nimport App from './root/App';\r\nimport config from './config';\r\nimport './common/Common.css';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nconst target = document.querySelector('#root');\r\n\r\nrender(\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history} basename={config.BASE_NAME}>\r\n        <App />\r\n      </ConnectedRouter>\r\n    </Provider>,\r\n    target\r\n);\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport RootRedirect from './RootRedirect';\r\nimport Main from './Main';\r\nimport Login from '../account/LoginPage';\r\nimport Register from '../account/RegisterPage';\r\n\r\nexport default () => (\r\n  <div>\r\n    <Route exact path={`${process.env.PUBLIC_URL}/`} component={RootRedirect} />\r\n    <Route path={`${process.env.PUBLIC_URL}/main`} component={Main} />\r\n    <Route path={`${process.env.PUBLIC_URL}/login`} component={Login} />\r\n    <Route path={`${process.env.PUBLIC_URL}/register`} component={Register} />\r\n  </div>\r\n);\r\n"],"sourceRoot":""}