{"version":3,"sources":["../../basic-application-template/src/config.js","../../basic-application-template/src/account/AccountActionTypes.js","../../basic-application-template/src/account/AccountReducer.js","../../basic-application-template/src/reducers.js","../../basic-application-template/src/store.js","../../basic-application-template/src/root/RootRedirect.js","../../basic-application-template/src/common/util/ServiceUtil.js","../../basic-application-template/src/account/AccountService.js","../../basic-application-template/src/common/util/ErrorUtil.js","../../basic-application-template/src/account/AccountActions.js","../../basic-application-template/src/root/HeaderNav.js","../../basic-application-template/src/root/ComingSoonPage.js","../../basic-application-template/src/common/components/MessageBox.js","../../basic-application-template/src/common/components/Message.js","../../basic-application-template/src/common/components/FieldMessage.js","../../basic-application-template/src/common/components/Field.js","../../basic-application-template/src/common/components/Spinner.js","../../basic-application-template/src/common/components/CenteredContainer.js","../../basic-application-template/src/common/components/SubmitButton.js","../../basic-application-template/src/account/ChangePassword.js","../../basic-application-template/src/root/Main.js","../../basic-application-template/src/account/LoginPage.js","../../basic-application-template/src/account/RegisterPage.js","../../basic-application-template/src/index.js","../../basic-application-template/src/root/App.js"],"names":["config","SESSION_STORAGE_SESSION_TOKEN","SESSION_STORAGE_USERNAME","SERVICE_URL","BASE_NAME","URI","SESSION","ACCOUNT","CHANGE_PASSWORD","AccountActionTypes","CLEAR_ERRORS","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","CHANGE_PASSWORD_REQUEST","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","initialState","sessionStorage","getItem","isLoggedIn","history","AccountReducer","state","arguments","length","undefined","action","type","actionTypes","Object","objectSpread","error","username","isSessionExpired","fetching","message","loggedIn","sessionExpired","saving","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","store","createStore","connectRouter","combineReducers","router","accountReducer","RootRedirect","react_default","a","createElement","Redirect","to","process","ServiceUtil","postNoAuth","post","get","save","erase","_callee","body","request","response","regenerator_default","wrap","_context","prev","next","method","headers","Content-Type","JSON","stringify","fetch","sent","handleResponse","abrupt","stop","_callee2","_context2","getAuth","_callee3","id","uri","_context3","_callee4","_context4","_callee5","_context5","Authorization","text","then","data","parse","ok","statusText","Promise","reject","AccountService","service","password","confirmPassword","SHA1","Hashes","oldPasswordHash","hex","oldPassword","newPasswordHash","newPassword","confirmPasswordHash","failure","actionType","errorUtil","handleErrors","dispatch","description","Error","accountActions","logout","Message","clearErrors","login","accountService","token","sessionToken","storeSessionData","success","clear","register","changePassword","validationError","trim","validateChangePassword","setItem","HeaderNav","className","Link","data-toggle","data-target","href","aria-haspopup","aria-expanded","aria-labelledby","onClick","this","props","handleLogout","Component","ComingSoonPage","MessageBox","_this$props","showWhen","style","paddingRight","warning","info","components_MessageBox","FieldMessage","errorKey","ModelState","map","errorMessage","i","key","Field","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showPassword","toggleShowPassword","bind","assertThisInitialized","setState","name","label","autoFocus","disabled","onChange","onBlur","value","placeholder","passwordVisibilityToggle","htmlFor","hasErrors","components_FieldMessage","aria-describedby","aria-hidden","Spinner","CenteredContainer","getClasses","classes","left","right","middle","getSize","container","children","SubmitButton","submit","e","preventDefault","ChangePassword","handleChange","_e$target","target","defineProperty","handleChangePassword","_this$state","actions","clearPassword","_this$state2","components_CenteredContainer","common_components_Spinner","components_Message","components_Field","components_SubmitButton","connect","_state$accountReducer","Main","document","location","pathname","endsWith","match","src_root_HeaderNav","isOnRootPath","Route","path","component","ComingSoon","Login","handleLogin","passwordHash","_this$props2","RegisterPage","handleCreateAccount","readyForSubmit","querySelector","render","es","esm","basename","exact","Register"],"mappings":"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","file":"static/js/main.3e6a474e.chunk.js","sourcesContent":["export default {\r\n  SESSION_STORAGE_SESSION_TOKEN: 'SessionToken',\r\n  SESSION_STORAGE_USERNAME: 'username',\r\n\r\n  SERVICE_URL: '',\r\n  \r\n  BASE_NAME: '/',\r\n\r\n  URI: {\r\n    SESSION: '/api/v1/session',\r\n    ACCOUNT: '/api/v1/account',\r\n    CHANGE_PASSWORD: '/api/v1/account/changepassword'\r\n  }\r\n}\r\n","export default {\r\n  CLEAR_ERRORS: 'CLEAR_ERRORS',\r\n  \r\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  \r\n  LOGOUT: 'LOGOUT',\r\n\r\n  REGISTER_REQUEST: 'REGISTER_REQUEST',\r\n  REGISTER_SUCCESS: 'REGISTER_SUCCESS',\r\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\r\n\r\n  CHANGE_PASSWORD_REQUEST: 'CHANGE_PASSWORD_REQUEST',\r\n  CHANGE_PASSWORD_SUCCESS: 'CHANGE_PASSWORD_SUCCESS',\r\n  CHANGE_PASSWORD_FAILURE: 'CHANGE_PASSWORD_FAILURE'\r\n}","import config from '../config'\r\nimport actionTypes from './AccountActionTypes'\r\n\r\nlet initialState = {}\r\nlet sessionToken = sessionStorage.getItem(config.SESSION_STORAGE_SESSION_TOKEN)\r\nif (sessionToken)\r\n  initialState = { isLoggedIn: true }\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      }\r\n    case actionTypes.REGISTER_REQUEST:\r\n    case actionTypes.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        isSessionExpired: false,\r\n        fetching: true,\r\n        error: null,\r\n        message: null\r\n      }\r\n    case actionTypes.REGISTER_SUCCESS:\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        loggedIn: true\r\n      }\r\n    case actionTypes.REGISTER_FAILURE:\r\n    case actionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetching: false,\r\n        error: action.error\r\n      }\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        sessionExpired: action.sessionExpired,\r\n        saving: false,\r\n        loggedIn: false,\r\n        message: action.message\r\n      }    \r\n    case actionTypes.CHANGE_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        saving: true,\r\n        error: null\r\n      }\r\n    case actionTypes.CHANGE_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        saving: false,\r\n        error: null\r\n      }\r\n    case actionTypes.CHANGE_PASSWORD_FAILURE:\r\n      return {\r\n        ...state,\r\n        saving: false,\r\n        error: action.error\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\nimport accountReducer from './account/AccountReducer'\r\n\r\nexport default (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  accountReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport rootReducer from './reducers'\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [\r\n  thunk,\r\n  routerMiddleware(history)\r\n]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension())\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nconst store = createStore(\r\n  connectRouter(history)(rootReducer(history)),\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default () => (\r\n  <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n)","import config from '../../config'\r\n\r\nexport default {\r\n  postNoAuth,\r\n  post,\r\n  get,\r\n  save,\r\n  erase\r\n}\r\n\r\nasync function postNoAuth(URI, body) {\r\n  const request = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(body)\r\n  }\r\n  const response = await fetch(config.SERVICE_URL + URI, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function post(URI, body) {\r\n  const request = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() },\r\n    body: JSON.stringify(body)\r\n  }\r\n  const response = await fetch(config.SERVICE_URL + URI, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function save(URI, id, body) {\r\n  let uri = config.SERVICE_URL + URI\r\n  let method = 'POST'\r\n  if(id !== undefined) {\r\n    method = 'PUT'\r\n    uri += \"/\" + id\r\n  }\r\n\r\n  const request = {\r\n    method: method,\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() },\r\n    body: JSON.stringify(body)\r\n  }\r\n  const response = await fetch(uri, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function get(URI, id) {\r\n  const request = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() }\r\n  }\r\n  let uri = config.SERVICE_URL + URI\r\n  if(id !== undefined)\r\n    uri += \"/\" + id\r\n\r\n  const response = await fetch(uri, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nasync function erase(URI, id) {\r\n  const request = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json', ...getAuth() }\r\n  }\r\n  let uri = config.SERVICE_URL + URI\r\n  if(id !== undefined)\r\n    uri += \"/\" + id\r\n\r\n  const response = await fetch(uri, request)\r\n  return await handleResponse(response)\r\n}\r\n\r\nfunction getAuth() {\r\n  return { 'Authorization': 'Custom ' + sessionStorage.getItem(config.SESSION_STORAGE_SESSION_TOKEN) }\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text)\r\n    if(response.ok) \r\n      return data\r\n\r\n      const error = data || response.statusText\r\n      return Promise.reject(error)\r\n  })\r\n}","import service from '../common/util/ServiceUtil'\r\nimport config from '../config'\r\nimport Hashes from 'jshashes'\r\n\r\nexport default {\r\n  login: data => service.postNoAuth(config.URI.SESSION, { username: data.username, password: data.password }),\r\n  register: data => service.post(config.URI.ACCOUNT, { username: data.username, password: data.password, confirmPassword: data.confirmPassword }),\r\n  logout: () => service.erase(config.URI.SESSION),\r\n  changePassword: data => {\r\n    let SHA1 = new Hashes.SHA1()\r\n    let oldPasswordHash = SHA1.hex(data.oldPassword)\r\n    let newPasswordHash = SHA1.hex(data.newPassword)\r\n    let confirmPasswordHash = SHA1.hex(data.confirmPassword)\r\n\r\n    return service.post(config.URI.CHANGE_PASSWORD, { oldPassword: oldPasswordHash, newPassword: newPasswordHash, confirmPassword: confirmPasswordHash })\r\n  }\r\n}\r\n","import accountActions from '../../account/AccountActions'\r\n\r\nlet errorUtil = {\r\n  handleErrors: (error, dispatch, actionType) => {\r\n    if(error.error == null || error.description == null) {\r\n      dispatch(failure(actionType, {Message: 'A server error has occurred. Please try again later.'}))\r\n      return\r\n    }\r\n\r\n    if(error.Error === \"Forbidden\")\r\n      dispatch(accountActions.logout('Session has expired. Please login again.'))\r\n    else\r\n      dispatch(failure(actionType, error))\r\n  }\r\n}\r\n\r\nfunction failure(actionType, error) {\r\n  return { type: actionType, error }\r\n}\r\n\r\nexport default errorUtil","import actionTypes from './AccountActionTypes'\r\nimport accountService from './AccountService'\r\nimport config from '../config'\r\nimport errorUtil from '../common/util/ErrorUtil'\r\n\r\nlet accountActions = {\r\n  clearErrors: () => {\r\n    return dispatch => {dispatch({ type: actionTypes.CLEAR_ERRORS })}\r\n  },\r\n  login: (data) => {\r\n    return dispatch => {\r\n      dispatch({ type: actionTypes.LOGIN_REQUEST })\r\n  \r\n      accountService.login(data)\r\n        .then(\r\n          data => dispatch(success(data.sessionToken, data.username)),\r\n          error => errorUtil.handleErrors(error, dispatch, actionTypes.LOGIN_FAILURE)\r\n        )\r\n    }\r\n  \r\n    function success(token, username) {\r\n      storeSessionData(token, username)\r\n      return { type: actionTypes.LOGIN_SUCCESS }\r\n    }\r\n  },\r\n  logout: (message) => {\r\n    return dispatch => {\r\n      accountService.logout()\r\n        .then(() => dispatch(success(message)),() => dispatch(success()))\r\n    }\r\n  \r\n    function success(message) {\r\n      sessionStorage.clear()\r\n      return { type: actionTypes.LOGOUT, message }\r\n    }\r\n  },\r\n  register: (data) => {\r\n    return dispatch => {\r\n      dispatch({ type: actionTypes.REGISTER_REQUEST })\r\n  \r\n      accountService.register(data)\r\n        .then(\r\n          data => dispatch(success(data.sessionToken, data.username)),\r\n          error => errorUtil.handleErrors(error, dispatch, actionTypes.REGISTER_FAILURE)\r\n        )\r\n    }\r\n  \r\n    function success(token, username) {\r\n      storeSessionData(token, username)\r\n      return { type: actionTypes.REGISTER_SUCCESS }\r\n    }\r\n  },\r\n  changePassword: (data) => {\r\n    return dispatch => {\r\n      let validationError = validateChangePassword(data)\r\n      if(validationError) {\r\n        errorUtil.handleErrors(validationError, dispatch, actionTypes.CHANGE_PASSWORD_FAILURE)\r\n        return\r\n      }\r\n  \r\n      dispatch({ type: actionTypes.CHANGE_PASSWORD_REQUEST })\r\n  \r\n      accountService.changePassword(data)\r\n        .then(\r\n          () => dispatch(accountActions.logout(\"Password changed. Please login with your new password.\")),\r\n          error => errorUtil.handleErrors(error, dispatch, actionTypes.CHANGE_PASSWORD_FAILURE)\r\n        )\r\n    }\r\n  }\r\n}\r\n\r\nfunction storeSessionData(token, username) {\r\n  sessionStorage.setItem(config.SESSION_STORAGE_SESSION_TOKEN, token)\r\n  sessionStorage.setItem(config.SESSION_STORAGE_USERNAME, username)\r\n}\r\n\r\nfunction validateChangePassword(data) {\r\n  if(data.oldPassword.trim() === '' || data.newPassword.trim() === '' || data.confirmPassword.trim() === '')\r\n    return {error:'AllPasswordFieldsRequired', description:'All password fields are required'}\r\n  return null\r\n}\r\n\r\nexport default accountActions","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './HeaderNav.css'\r\n\r\nclass HeaderNav extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark navbar-logo\">\r\n        <div className=\"container body-container high-res-height low-res-margin\">\r\n          <Link className=\"navbar-brand\" to={`${process.env.PUBLIC_URL}/main/`}><i className=\"fas fa-biohazard logo\"></i></Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCustom\">\r\n            <i className=\"fas fa-bars white-icon\"></i>\r\n          </button>\r\n          <div className=\"navbar-collapse collapse\" id=\"navbarCustom\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item nav-item-fix\">\r\n                <Link className=\"nav-link\" to={`${process.env.PUBLIC_URL}/main/mypath`}>Test</Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <button className=\"btn btn-link nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Account</button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <Link className=\"dropdown-item\" to={`${process.env.PUBLIC_URL}/main/changepassword`}>Change Password</Link>\r\n                  <Link className=\"dropdown-item\" to={`${process.env.PUBLIC_URL}/main/mypath`}>Settings</Link>\r\n                  <div className=\"dropdown-divider\"></div>\r\n                  <button className=\"btn btn-link dropdown-item\" onClick={this.props.handleLogout}>Logout</button>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderNav","import React from 'react'\r\n\r\nexport default () => (\r\n  <div>\r\n    Coming soon...\r\n  </div>\r\n)","import React, { Component } from 'react'\r\n\r\nclass MessageBox extends Component {\r\n  render() {\r\n    const {message, showWhen, type} = this.props\r\n\r\n    if(!showWhen)\r\n      return null\r\n\r\n    return (\r\n      <div className={`alert ${type === 'error' ? 'alert-danger' : ''} ${type === 'warning' ? 'alert-warn' : ''} ${type === 'info' ? 'alert-info' : ''}`}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td style={{paddingRight: \"5px\"}}><i className={`fas ${type === 'info' ? 'fa-info-circle' : 'fa-exclamation-circle'}`}></i></td>\r\n              <td>{message}</td>\r\n            </tr>\r\n          </tbody>            \r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageBox","import React, { Component } from 'react'\r\nimport MessageBox from './MessageBox'\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    const {error,warning,info} = this.props\r\n\r\n    return (\r\n      <div>\r\n        <MessageBox showWhen={error} message={error ? error.description : ''} type=\"error\" />\r\n        <MessageBox showWhen={warning} message={warning} type=\"warning\" />\r\n        <MessageBox showWhen={info} message={info} type=\"info\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Message","import React, { Component } from 'react'\r\n\r\nclass FieldMessage extends Component {\r\n  render() {\r\n    const {error, errorKey} = this.props\r\n    if (error == null || error.ModelState == null || error.ModelState[errorKey] == null)\r\n      return null\r\n\r\n    return (\r\n      <div className=\"invalid-feedback\">\r\n        {error.ModelState[errorKey].map((errorMessage, i) => {\r\n            return (\r\n              <div key={i}>{errorMessage}</div>\r\n            )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FieldMessage","import React, { Component } from 'react'\r\nimport FieldMessage from './FieldMessage'\r\n\r\nclass Field extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showPassword: false\r\n    }\r\n\r\n    this.toggleShowPassword = this.toggleShowPassword.bind(this)\r\n  }\r\n\r\n  toggleShowPassword() {\r\n    this.setState({showPassword: !this.state.showPassword})\r\n  }\r\n  \r\n  hasErrors(errorKey) {\r\n    const { error } = this.props\r\n    return error != null && error.ModelState != null && error.ModelState[errorKey] != null\r\n  }\r\n\r\n  render() {\r\n\r\n    const {showWhen, name, label, type, autoFocus, errorKey, disabled, onChange, onBlur, value, placeholder, error, passwordVisibilityToggle} = this.props\r\n    const {showPassword} = this.state\r\n\r\n    if(showWhen !== undefined && !showWhen)\r\n      return null\r\n\r\n    if(type==='textarea') \r\n      return (\r\n        <div className=\"form-group\">\r\n          <label htmlFor={name}>{label}</label>\r\n          <textarea\r\n            autoFocus={autoFocus} \r\n            className={\"form-control \" + (this.hasErrors(errorKey) ? \"is-invalid\" : \"\")} \r\n            disabled={disabled} \r\n            name={name} \r\n            onChange={onChange} \r\n            onBlur={onBlur}\r\n            value={value}\r\n            placeholder={placeholder} />\r\n          <FieldMessage error={error} errorKey={errorKey} />\r\n        </div>\r\n      )\r\n\r\n    if(type==='password' && passwordVisibilityToggle) \r\n        return (\r\n          <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group\">\r\n              <input type={showPassword ? 'text' : 'password'}\r\n                autoFocus={autoFocus} \r\n                className={\"form-control \" + (this.hasErrors(errorKey) ? \"is-invalid\" : \"\")} \r\n                disabled={disabled} \r\n                name={name} \r\n                onChange={onChange} \r\n                onBlur={onBlur}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                aria-describedby=\"basic-addon2\" />\r\n              <div className=\"input-group-append\">\r\n                {showPassword && <i id=\"basic-addon2\" className=\"fas fa-eye-slash clickable input-group-text\" aria-hidden=\"true\" onClick={this.toggleShowPassword}></i>}\r\n                {!showPassword && <i id=\"basic-addon2\" className=\"fas fa-eye clickable input-group-text\" aria-hidden=\"true\" onClick={this.toggleShowPassword}></i>}\r\n              </div>\r\n            </div>\r\n            <FieldMessage error={error} errorKey={errorKey} />\r\n          </div>\r\n        )\r\n\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type}\r\n          autoFocus={autoFocus} \r\n          className={\"form-control \" + (this.hasErrors(errorKey) ? \"is-invalid\" : \"\")} \r\n          disabled={disabled} \r\n          name={name} \r\n          onChange={onChange} \r\n          onBlur={onBlur}\r\n          value={value}\r\n          placeholder={placeholder} />\r\n        <FieldMessage error={error} errorKey={errorKey} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Field\r\n\r\n","import React, { Component } from 'react'\r\nimport './Spinner.css'\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    const {showWhen, message} = this.props\r\n\r\n    if(showWhen)\r\n      return (\r\n        <div className=\"spinner_panel row\">\r\n          <div className=\"col-sm-12 text-center\">\r\n            <i className=\"fas fa-circle-notch fa-spin\"></i> {message}\r\n              </div>\r\n        </div>\r\n      )\r\n    return null\r\n  }\r\n}\r\n\r\nexport default Spinner","import React, { Component } from 'react'\r\n\r\nclass CenteredContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      left: 3,\r\n      right: 3,\r\n      middle: 6\r\n    }\r\n\r\n    this.getSize = this.getSize.bind(this)\r\n  }\r\n\r\n  getSize(container) {\r\n    return this.props[container] === undefined ? this.state[container] : this.props[container]\r\n  }\r\n\r\n  getClasses = () => {\r\n    let classes = \"container-fluid top-page-padding \"\r\n    return this.props.className ? classes + this.props.className : classes\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={this.getClasses()}>\r\n        <div className=\"row\">\r\n          <div className={\"col-md-\" + this.getSize('left')}></div>\r\n          <div className={\"col-md-\" + this.getSize('middle')}>\r\n            {this.props.children}\r\n          </div>\r\n          <div className={\"col-md-\" + this.getSize('right')}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CenteredContainer\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass SubmitButton extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault()\r\n    this.props.onClick()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {showWhen, label, disabled} = this.props\r\n\r\n    if(showWhen !== undefined && !showWhen)\r\n      return null\r\n\r\n    return (\r\n      <input type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            disabled={disabled}\r\n            onClick={this.submit}\r\n            value={label}></input>   \r\n    )\r\n  }\r\n}\r\n\r\nexport default SubmitButton\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport actions from './AccountActions'\r\nimport Message from '../common/components/Message'\r\nimport Field from '../common/components/Field'\r\nimport Spinner from '../common/components/Spinner'\r\nimport CenteredContainer from '../common/components/CenteredContainer'\r\nimport SubmitButton from '../common/components/SubmitButton'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.dispatch(actions.clearErrors())\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleChangePassword = (e) => {\r\n    const { oldPassword, newPassword, confirmPassword } = this.state\r\n    const { dispatch } = this.props\r\n\r\n    dispatch(actions.changePassword({oldPassword, newPassword, confirmPassword}))\r\n    this.clearPassword()\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({ oldPassword: '', newPassword: '', confirmPassword: '' })\r\n  }\r\n\r\n  render() {\r\n    const { saving, error } = this.props\r\n    const { oldPassword, newPassword, confirmPassword } = this.state\r\n\r\n    return (\r\n      <CenteredContainer left={2} middle={6} right={2}>   \r\n        <Spinner showWhen={saving} message=\"changing password...\" />\r\n        {!saving && \r\n          <div>\r\n            <Message error={error} />\r\n            <form>\r\n              <Field  type=\"password\" \r\n                      name=\"oldPassword\"\r\n                      errorKey=\"oldPassword\" \r\n                      label=\"Old Password\"\r\n                      autoFocus={true}\r\n                      error={error}\r\n                      value={oldPassword} \r\n                      disabled={saving}\r\n                      onChange={this.handleChange} />\r\n\r\n              <Field  type=\"password\" \r\n                      name=\"newPassword\"\r\n                      errorKey=\"newPassword\" \r\n                      label=\"New Password\" \r\n                      error={error}\r\n                      value={newPassword} \r\n                      disabled={saving}\r\n                      onChange={this.handleChange} />\r\n\r\n              <Field  type=\"password\" \r\n                      name=\"confirmPassword\"\r\n                      errorKey=\"confirmPassword\" \r\n                      label=\"Confirm New Password\" \r\n                      error={error}\r\n                      value={confirmPassword} \r\n                      disabled={saving}\r\n                      onChange={this.handleChange} />        \r\n                            \r\n              <div className=\"row button-top-padding\">\r\n                <div className=\"col-md-12 text-center\">\r\n                  <SubmitButton \r\n                      onClick={this.handleChangePassword}\r\n                      label=\"Change Password\" />\r\n\r\n                  <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/`}>Cancel</Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        }\r\n      </CenteredContainer>\r\n    )\r\n  }\r\n}\r\n\r\nChangePassword.propTypes = {\r\n  saving: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { saving, error } = state.accountReducer\r\n\r\n  return {\r\n    saving, error\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ChangePassword)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport accountActions from '../account/AccountActions'\r\nimport HeaderNav from './HeaderNav'\r\nimport ComingSoon from './ComingSoonPage'\r\nimport ChangePassword from '../account/ChangePassword'\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleLogout = this.handleLogout.bind(this)\r\n  }\r\n  \r\n  componentWillMount() {\r\n    document.body.className = ''\r\n  }\r\n\r\n  handleLogout() {\r\n    const { dispatch } = this.props\r\n    dispatch(accountActions.logout())\r\n  }\r\n\r\n  isOnRootPath(location) {\r\n    const { pathname } = location\r\n    return pathname.endsWith('/main') || pathname.endsWith('/main/')\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.loggedIn)\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n    else {\r\n      const { match } = this.props\r\n\r\n      return (\r\n        <div>\r\n          <HeaderNav handleLogout={this.handleLogout}></HeaderNav>\r\n          {this.isOnRootPath(this.props.location) && \r\n            <div>Root</div>\r\n          }\r\n          {!this.isOnRootPath(this.props.location) && \r\n            <div>\r\n              <Route path={`${match.path}/mypath`} component={ComingSoon} />\r\n              <Route path={`${match.path}/changepassword`} component={ChangePassword} />\r\n            </div> \r\n          }\r\n        </div>\r\n      )\r\n     }\r\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  loggedIn: PropTypes.bool\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { loggedIn } = state.accountReducer\r\n  return {\r\n    loggedIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport actions from './AccountActions'\r\nimport Message from '../common/components/Message'\r\nimport Field from '../common/components/Field'\r\nimport Spinner from '../common/components/Spinner'\r\nimport CenteredContainer from '../common/components/CenteredContainer'\r\nimport SubmitButton from '../common/components/SubmitButton'\r\nimport { Link } from 'react-router-dom'\r\nimport Hashes from 'jshashes'\r\nimport './AccountPage.css'\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = 'full-back'\r\n    this.props.dispatch(actions.clearErrors())\r\n    this.logout()\r\n  }\r\n\r\n  logout() {\r\n    const { dispatch, isLoggedIn } = this.props\r\n    if(isLoggedIn)\r\n      dispatch(actions.logout())\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleLogin = (e) => {\r\n    const { username, password } = this.state\r\n    const { dispatch } = this.props\r\n\r\n    let SHA1 = new Hashes.SHA1()\r\n    let passwordHash = SHA1.hex(password)\r\n\r\n    dispatch(actions.login({username, password:passwordHash}))\r\n    this.clearPassword()\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({ password: '' })\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, fetching, error, message } = this.props\r\n    const { username, password } = this.state\r\n\r\n    if (loggedIn)\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n    \r\n    return (\r\n      <CenteredContainer left={4} middle={4} right={4} className=\"account-div\"> \r\n        <div className=\"inner-panel\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <i className=\"fas fa-biohazard logo\"></i>\r\n            </div>\r\n          </div>\r\n          <br /><br />\r\n          <Spinner showWhen={fetching} message=\"logging in...\" />\r\n          {!fetching && \r\n            <div>\r\n              <Message error={error} info={message} />\r\n              <form>\r\n                <Field  type=\"text\" \r\n                        name=\"username\"\r\n                        errorKey=\"username\" \r\n                        label=\"Username (e-mail)\"\r\n                        autoFocus={true}\r\n                        error={error}\r\n                        value={username} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n\r\n                <Field  type=\"password\" \r\n                        name=\"password\"\r\n                        errorKey=\"password\" \r\n                        label=\"Password\" \r\n                        error={error}\r\n                        value={password} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n                              \r\n                <div className=\"row button-top-padding\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <SubmitButton \r\n                        disabled={fetching} \r\n                        onClick={this.handleLogin}\r\n                        label=\"Login\" />\r\n\r\n                    <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/register`}>Register</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          }\r\n        </div>     \r\n      </CenteredContainer>\r\n    )\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  fetching: PropTypes.bool,\r\n  loggedIn: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { fetching, loggedIn, error, message } = state.accountReducer\r\n\r\n  return {\r\n    fetching, loggedIn, error, message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport actions from './AccountActions'\r\nimport Message from '../common/components/Message'\r\nimport Field from '../common/components/Field'\r\nimport Spinner from '../common/components/Spinner'\r\nimport CenteredContainer from '../common/components/CenteredContainer'\r\nimport SubmitButton from '../common/components/SubmitButton'\r\nimport { Link } from 'react-router-dom'\r\nimport Hashes from 'jshashes'\r\nimport './AccountPage.css'\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.className = 'full-back'\r\n    this.props.dispatch(actions.clearErrors())\r\n    this.logout()\r\n  }\r\n  \r\n  logout() {\r\n    const { dispatch, isLoggedIn } = this.props\r\n    if(isLoggedIn)\r\n      dispatch(actions.logout())\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleCreateAccount = (e) => {\r\n    const { username, password, confirmPassword } = this.state\r\n    const { dispatch } = this.props\r\n\r\n    let SHA1 = new Hashes.SHA1()\r\n    let passwordHash = SHA1.hex(password)\r\n    let confirmPasswordHash = SHA1.hex(confirmPassword)\r\n\r\n    dispatch(actions.register({username, password:passwordHash, confirmPassword:confirmPasswordHash}))\r\n    this.clearPassword()\r\n  }\r\n\r\n  readyForSubmit = () => {\r\n    return this.state.username != null && this.state.password != null && this.state.confirmPassword != null\r\n  }\r\n\r\n  clearPassword() {\r\n    this.setState({ password: '', confirmPassword: '' })\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, fetching, error, message } = this.props\r\n    const { username, password, confirmPassword } = this.state\r\n\r\n    if (loggedIn)\r\n      return <Redirect to={`${process.env.PUBLIC_URL}/main`} />\r\n    \r\n    return (\r\n      <CenteredContainer left={4} middle={4} right={4} className=\"account-div\">   \r\n        <div className=\"inner-panel\">   \r\n          <div className=\"row logo-top-padding\">\r\n            <div className=\"col-md-12 text-center\">\r\n              <i className=\"fas fa-biohazard logo\"></i>\r\n            </div>\r\n          </div>\r\n          <br /><br />\r\n          <Spinner showWhen={fetching} message=\"logging in...\" />\r\n          {!fetching && \r\n            <div>\r\n              <Message error={error} info={message} />\r\n              <form>\r\n                <Field  type=\"text\" \r\n                        name=\"username\"\r\n                        errorKey=\"username\" \r\n                        label=\"Username (e-mail)\"\r\n                        autoFocus={true}\r\n                        error={error}\r\n                        value={username} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n\r\n                <Field  type=\"password\" \r\n                        name=\"password\"\r\n                        errorKey=\"password\" \r\n                        label=\"Password\" \r\n                        error={error}\r\n                        value={password} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />\r\n\r\n                <Field  type=\"password\" \r\n                        name=\"confirmPassword\"\r\n                        errorKey=\"confirmPassword\" \r\n                        label=\"Confirm Password\" \r\n                        error={error}\r\n                        value={confirmPassword} \r\n                        disabled={fetching}\r\n                        onChange={this.handleChange} />        \r\n                              \r\n                <div className=\"row button-top-padding\">\r\n                  <div className=\"col-md-12 text-center\">\r\n                    <SubmitButton \r\n                        disabled={fetching || !this.readyForSubmit} \r\n                        onClick={this.handleCreateAccount}\r\n                        label=\"Create Account\" />\r\n\r\n                    <Link className=\"btn btn-secondary\" to={`${process.env.PUBLIC_URL}/login`}>Cancel</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          }\r\n        </div>\r\n      </CenteredContainer>\r\n    )\r\n  }\r\n}\r\n\r\nRegisterPage.propTypes = {\r\n  fetching: PropTypes.bool,\r\n  loggedIn: PropTypes.bool,\r\n  error: PropTypes.object,\r\n  message: PropTypes.string\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { fetching, loggedIn, error, message } = state.accountReducer\r\n\r\n  return {\r\n    fetching, loggedIn, error, message\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegisterPage)","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport store, { history } from './store'\r\nimport App from './root/App'\r\nimport config from './config'\r\nimport './common/Common.css'\r\nimport 'react-day-picker/lib/style.css'\r\n\r\nconst target = document.querySelector('#root')\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history} basename={config.BASE_NAME}>\r\n        <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  target\r\n)","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport RootRedirect from './RootRedirect'\r\nimport Main from './Main'\r\nimport Login from '../account/LoginPage'\r\nimport Register from '../account/RegisterPage'\r\n\r\nexport default () => (\r\n  <div>\r\n    <Route exact path={`${process.env.PUBLIC_URL}/`} component={RootRedirect} />\r\n    <Route path={`${process.env.PUBLIC_URL}/main`} component={Main} />\r\n    <Route path={`${process.env.PUBLIC_URL}/login`} component={Login} />\r\n    <Route path={`${process.env.PUBLIC_URL}/register`} component={Register} />\r\n  </div>\r\n)"],"sourceRoot":""}